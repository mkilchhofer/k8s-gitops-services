---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vmsingle
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: core-services-unrestricted
  syncPolicy: {}
  source:
    chart: victoria-metrics-single
    repoURL: https://victoriametrics.github.io/helm-charts/
    targetRevision: "0.9.0"
    helm:
      version: v3
      values: |-
        rbac:
          namespaced: true # Don't deploy ClusterRoles / ClusterRoleBinding
        server:
          persistentVolume:
            storageClass: "iscsi-manual"
            size: 50Gi
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          podSecurityContext:
            runAsUser: 1000
          securityContext:
            fsGroup: 1000
          scrape:
            enabled: true
            config:
              scrape_configs:
                - job_name: victoriametrics
                  static_configs:
                    - targets: [ "localhost:8428" ]
        extraObjects:
          - apiVersion: networking.k8s.io/v1
            kind: NetworkPolicy
            metadata:
              name: vmsingle
            spec:
              podSelector:
                matchLabels:
                  app: server
                  app.kubernetes.io/instance: vmsingle
                  app.kubernetes.io/name: victoria-metrics-single
              policyTypes:
                - Ingress
              ingress:
                - from:
                    - podSelector:
                        matchLabels:
                          app.kubernetes.io/instance: vmagent
                          app.kubernetes.io/name: victoria-metrics-agent
                    - podSelector:
                        matchLabels:
                          app.kubernetes.io/instance: prometheus-adapter
                          app.kubernetes.io/name: prometheus-adapter
                    - podSelector:
                        matchLabels:
                          app.kubernetes.io/instance: opencost
                          app.kubernetes.io/name: opencost
                    - podSelector:
                        matchLabels:
                          app.kubernetes.io/instance: vm-oauth2-proxy
                          app.kubernetes.io/name: oauth2-proxy
                    - namespaceSelector:
                        matchLabels:
                          kubernetes.io/metadata.name: keda
                      podSelector:
                        matchLabels:
                          app: keda-operator
                  ports:
                    - port: http
                      protocol: TCP
