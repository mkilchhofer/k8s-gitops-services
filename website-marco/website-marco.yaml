apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: website-marco
  name: website-marco
---
apiVersion: v1
kind: Service
metadata:
  name: website-marco
  namespace: website-marco
spec:
  selector:
    app: website-marco
  ports:
  - name: website-http
    port: 8080
    targetPort: http
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: website-marco
  namespace: website-marco
  annotations:
    kubernetes.io/ingress.class: traefik-external
    ingress.kubernetes.io/force-hsts: "true"
    ingress.kubernetes.io/hsts-max-age: "86400"
    ingress.kubernetes.io/hsts-include-subdomains: "true"
    ingress.kubernetes.io/hsts-preload: "false"
    ingress.kubernetes.io/content-security-policy: "default-src 'self'; script-src 'self'"
    ingress.kubernetes.io/custom-response-headers: "Expect-CT: max-age=86400, enforce"
    traefik.ingress.kubernetes.io/redirect-regex: ^http((://(www\\.)?)|(s://))kilchhofer\\.info/(.*)$
    traefik.ingress.kubernetes.io/redirect-replacement: https://www.kilchhofer.info/$5
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  rules:
  - host: www.kilchhofer.info
    http:
      paths:
      - path: /
        backend:
          serviceName: website-marco
          servicePort: website-http
  - host: kilchhofer.info
    http:
      paths:
      - path: /
        backend:
          serviceName: website-marco
          servicePort: website-http
  tls:
  - hosts:
    - www.kilchhofer.info
    - kilchhofer.info
    secretName: website-marco-cert
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: website-marco
  namespace: website-marco
spec:
  serviceName: website-marco
  selector:
    matchLabels:
      app: website-marco
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: website-marco
    spec:
      containers:
      - name: website
        image: nginx:1.19.4-alpine
        env:
        - name: "NGINX_PORT"
          value: "8080"
        ports:
        - name: http
          containerPort: 80
#        livenessProbe:
#          httpGet:
#            path: /
#            port: http
#          periodSeconds: 60
#          timeoutSeconds: 30
#          initialDelaySeconds: 15
#        readinessProbe:
#          httpGet:
#            path: /
#            port: http
#          periodSeconds: 30
#          timeoutSeconds: 15
#          initialDelaySeconds: 7
        volumeMounts:
        - name: website-marco-storage
          mountPath: /usr/share/nginx/html
        resources:
          limits:
            cpu: 300m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 256Mi
  volumeClaimTemplates:
  - metadata:
      name: website-marco-storage
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "100Mi"
      storageClassName: nfs-data
