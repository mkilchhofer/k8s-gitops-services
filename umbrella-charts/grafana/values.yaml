global:
  postgresql:
    auth:
      existingSecret: "grafana-db-secret"
      username: "grafana"
      database: "grafana"
      secretKeys:
        adminPasswordKey: "adminPassword"
        userPasswordKey: "userPassword"

postgresql:
  primary:
    persistence:
      storageClass: iscsi-manual
      size: 10Gi
    networkPolicy:
      allowExternal: false
    resources:
      limits:
        cpu: 300m
        ephemeral-storage: 2Gi
        memory: 256Mi
      requests:
        cpu: 30m
        ephemeral-storage: 50Mi
        memory: 128Mi

grafana:
  image:
    tag: "12.1.1-ubuntu"

  revisionHistoryLimit: 1

  podLabels:
    grafana-postgresql-client: "true"

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 128Mi

  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt
    ingressClassName: nginx-external
    hosts:
      - grafana.kilchhofer.info

    tls:
      - secretName: grafana-ingress-cert
        hosts:
          - grafana.kilchhofer.info

  rbac:
    pspEnabled: false
    namespaced: true

  initChownData:
    enabled: false
  useStatefulSet: true
  persistence:
    enabled: true
    type: statefulset
    storageClassName: nfs-data
    size: 5Gi

  grafana.ini:
    server:
      root_url: https://grafana.kilchhofer.info
    auth.generic_oauth:
      allow_sign_up: true
      api_url: https://sso.cloud.kilchhofer.info/userinfo
      auth_url: https://sso.cloud.kilchhofer.info/auth
      client_id: grafana
      enabled: true
      name: Dex
      scopes: openid profile email groups
      token_url: https://sso.cloud.kilchhofer.info/token
      email_attribute_path: email
      # Role mapping
      role_attribute_path: contains(groups[*], 'kilchhofer-home:admins') && 'GrafanaAdmin' || contains(groups[*], 'kilchhofer-home:editors') && 'Editor' || 'None'
      allow_assign_grafana_admin: true
    auth.anonymous:
      hide_version: true
    database:
      type: postgres
      host: grafana-postgresql.base-infra.svc.cluster.local:5432
      name: grafana
      user: grafana
      password: $__file{/etc/secrets/postgres/userPassword}
    metrics:
      enabled: false
    security:
      # Ref: https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-security-hardening/
      cookie_secure: true
      cookie_samesite: strict
      content_security_policy: true
      content_security_policy_template: |
        """script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' $NONCE;object-src 'none';font-src 'self';style-src 'self' 'unsafe-inline' blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com ws://$ROOT_PATH wss://$ROOT_PATH;manifest-src 'self';media-src 'none';form-action 'self';"""

  envFromSecrets:
  - name: grafana-oidc-secret
    optional: false

  extraSecretMounts:
  - name: db-secret
    mountPath: /etc/secrets/postgres
    secretName: grafana-db-secret
    readOnly: true
    defaultMode: "0644"

  admin:
    existingSecret: grafana-admin-creds

  extraObjects:
  - apiVersion: cilium.io/v2
    kind: CiliumNetworkPolicy
    metadata:
      name: grafana
    spec:
      endpointSelector:
        matchLabels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
      egress:
        - toFQDNs:
            - matchName: grafana.com
            - matchName: grafana.net
              # User avatars
            - matchName: secure.gravatar.com
              # Version check
            - matchName: raw.githubusercontent.com
              # Loki logs at Grafana Cloud
            - matchName: logs-prod-eu-west-0.grafana.net
              # VictoriaMetrics endpoint
            - matchName: vm.kilchhofer.info
              # SSO with Dex
            - matchName: sso.cloud.kilchhofer.info
          toPorts:
            - ports:
                - port: "443"

  - apiVersion: external-secrets.io/v1
    kind: ExternalSecret
    metadata:
      name: grafana-oidc-secret
    spec:
      secretStoreRef:
        kind: ClusterSecretStore
        name: akeyless-k3s-secrets

      target:
        name: grafana-oidc-secret

      data:
        - secretKey: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
          remoteRef:
            key: /k3s/grafana/oidc-clientSecret

  - apiVersion: external-secrets.io/v1
    kind: ExternalSecret
    metadata:
      name: grafana-admin-creds
    spec:
      secretStoreRef:
        kind: ClusterSecretStore
        name: akeyless-k3s-secrets

      target:
        name: grafana-admin-creds

      dataFrom:
      - extract:
          key: /k3s/grafana/admin-creds
