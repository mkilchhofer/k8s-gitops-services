victoria-metrics-single:
  rbac:
    namespaced: true # Don't deploy ClusterRoles / ClusterRoleBinding
  server:
    persistentVolume:
      storageClassName: "iscsi-manual"
      size: 50Gi
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 50m
        memory: 950Mi
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    scrape:
      enabled: true
      config:
        scrape_configs:
          - job_name: victoriametrics
            static_configs:
              - targets: [ "localhost:8428" ]
                labels:
                  pod: '%{POD_NAME}'
                  namespace: '%{POD_NAMESPACE}'

  extraObjects:
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: vmsingle
      spec:
        podSelector:
          matchLabels:
            app: server
            app.kubernetes.io/instance: vmsingle
            app.kubernetes.io/name: victoria-metrics-single
        policyTypes:
          - Ingress
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: vmagent
                    app.kubernetes.io/name: victoria-metrics-agent
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: prometheus-adapter
                    app.kubernetes.io/name: prometheus-adapter
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: opencost
                    app.kubernetes.io/name: opencost
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: vmsingle
                    app.kubernetes.io/name: oauth2-proxy
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: keda
                podSelector:
                  matchLabels:
                    app: keda-operator
            ports:
              - port: http
                protocol: TCP

#######################################################
oauth2-proxy:
  resources:
    limits:
      cpu: 100m
      memory: 64Mi
    requests:
      cpu: 5m
      memory: 32Mi

  config:
    existingSecret: vm-oauth2-proxy-custom
    configFile: |-
      reverse_proxy = true
      real_client_ip_header = "X-Forwarded-For"
      provider = "oidc"
      provider_display_name = "GitHub / Dex"
      redirect_url = "https://vm.kilchhofer.info/oauth2/callback"
      oidc_issuer_url = "https://sso.kilchhofer.info"
      email_domains = [ "*" ]
      upstreams = [ "http://vmsingle-victoria-metrics-single-server.monitoring.svc:8428" ]
      silence_ping_logging = true
      cookie_secure = false
      pass_access_token = true
      pass_authorization_header = true
      footer = "Secured with <a href=\"https://github.com/oauth2-proxy/oauth2-proxy#oauth2_proxy\" class=\"has-text-grey\">OAuth2 Proxy</a>"
      allowed_groups = [
          "kilchhofer-home:admins"
      ]
      htpasswd_user_groups = [
          "kilchhofer-home:admins",
          "basic-auth"
      ]

  htpasswdFile:
    enabled: true
    existingSecret: vm-oauth2-proxy-custom-htpasswd-file
    # credentials are injected via helm-secrets

  service:
    annotations:
      prometheus.io/port: '44180'
      prometheus.io/scrape: 'true'

  ingress:
    enabled: true
    hosts:
      - vm.kilchhofer.info
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt
    className: nginx-external
    tls:
      - secretName: vm-oauth2-proxy-toplevel-ingress-cert
        hosts:
          - vm.kilchhofer.info

  extraObjects:
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: vmsingle-oauth2-proxy
      spec:
        podSelector:
          matchLabels:
            app.kubernetes.io/instance: vmsingle
            app.kubernetes.io/name: oauth2-proxy
        policyTypes:
          - Egress
          - Ingress
        egress:
            # To SSO (dex)
          - ports:
            - port: 443
              protocol: TCP
        ingress:
          - ports:
              - port: http
                protocol: TCP

    - apiVersion: external-secrets.io/v1
      kind: ExternalSecret
      metadata:
        name: vm-oauth2-proxy-custom
      spec:
        secretStoreRef:
          kind: ClusterSecretStore
          name: akeyless-k3s-secrets

        target:
          name: vm-oauth2-proxy-custom

        dataFrom:
        - extract:
            key: /k3s/victoria-metrics-vmsingle/oauth2-proxy

    - apiVersion: external-secrets.io/v1
      kind: ExternalSecret
      metadata:
        name: vm-oauth2-proxy-custom-htpasswd-file
      spec:
        secretStoreRef:
          kind: ClusterSecretStore
          name: akeyless-k3s-secrets

        target:
          name: vm-oauth2-proxy-custom-htpasswd-file

        data:
          - secretKey: users.txt
            remoteRef:
              key: /k3s/victoria-metrics-vmsingle/oauth2-proxy-htpasswd
