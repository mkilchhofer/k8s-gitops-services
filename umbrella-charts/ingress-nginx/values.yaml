ingress-nginx:
  controller:
    image:
      allowPrivilegeEscalation: false
    service:
      externalTrafficPolicy: Local
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
          - NET_BIND_SERVICE
        drop:
          - ALL
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 101
      seccompProfile:
        type: RuntimeDefault
    extraArgs:
      # Ref: https://grafana.com/blog/2025/04/29/how-to-keep-ingress-nginx-controller-metric-volumes-manageable-and-still-meaningful/
      report-status-classes: ""

    metrics:
      enabled: true
      service:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "10254"
          prometheus.io/honor_labels: "true"
        clusterIP: None

    admissionWebhooks:
      certManager:
        enabled: true

    config:
      log-format-escape-json: 'true'
      # Default is defined here:
      # https://github.com/kubernetes/ingress-nginx/blob/1e6ebc15974efc5d9fd7ad2e35e2deae947861b2/internal/ingress/controller/config/config.go#L54
      # Field reference: https://nginx.org/en/docs/varindex.html
      log-format-upstream: >-
        {
        "time": "$time_iso8601",
        "remote_addr": "$proxy_protocol_addr",
        "x_forwarded_for": "$proxy_add_x_forwarded_for",
        "request_id": "$req_id",
        "remote_user": "$remote_user",
        "bytes_sent": $bytes_sent,
        "request_time": $request_time,
        "status": $status,
        "vhost": "$host",
        "request_proto": "$server_protocol",
        "path": "$uri",
        "request_query": "$args",
        "request_length": $request_length,
        "duration": $request_time,
        "method": "$request_method",
        "http_referrer": "$http_referer",
        "http_user_agent": "$http_user_agent"
        }
      # Default is defined here:
      # https://github.com/kubernetes/ingress-nginx/blob/1e6ebc15974efc5d9fd7ad2e35e2deae947861b2/internal/ingress/controller/config/config.go#L56
      log-format-stream: >-
        {
        "time": "$time_iso8601",
        "access_type": "stream",
        "remote_addr": "$remote_addr",
        "protocol": "$protocol",
        "status": $status,
        "bytes_sent": $bytes_sent,
        "bytes_received": $bytes_received,
        "session_time": $session_time
        }

  defaultBackend:
    enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 1m
        memory: 8Mi
